import os
import threading
import time
import sys


# -------------------------------------Thread definition----------------------------------------------------------------

class myThread(threading.Thread):  # thread definition updated in python 3.0
    def __init__(self, threadID, name, command):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.command = command

    def run(self):
        print("Starting " + self.name)
        run_scan(self.command)
        print("Exiting " + self.name)


# ----------------------------------------------------------------------------------------------------------------------


PasswordCracking = False
NetworkScanner = False
WebsiteScanner = False
FullAutomation = False


# ---------------------------------------------Methodes------------------------------------------------------------------

def clear():
    os.system("clear")

def run_scan(command):  # scan def for threads to run
    os.system(command)


def automated_scan():
    threads = []
    threadnumber = 1
    stillWorking = True
    commands = []
    commands.append("sudo python3 PasswordCracker.py 1")
    commands.append("sudo python3 NetworkScanner.py 1")
    commands.append("sudo python3 WebsiteScanner.py 1")
    for i in commands:
        thread = myThread(1, "Thread-" + str(threadnumber), i)  # creating thread
        thread.start()
        threads.append(thread)  # add to pool
        threadnumber = threadnumber + 1

    while stillWorking:
        alive = False
        clear()
        whatThread = 0
        for i in threads:
            whatThread = whatThread + 1
            if i.is_alive():
                alive = True
                print("thread " + whatThread + " is Working...")
            elif not i.is_alive():
                print("thread " + whatThread + " is Done")
        if not alive:
            stillWorking = False


def start_all_scan_normal(option1, option2, option3):
    if option1:
        os.system("sudo python3 PasswordCracker.py 0")
    if option2:
        os.system("sudo python3 NetworkScanner.py 0")
    if option3:
        os.system("sudo python3 WebsiteScanner.py 0")

# ----------------------------------------------------------------------------------------------------------------------


print("Welcome to the main script for the repeatable pentest!")
print("First we will go over all the options you want to enable")

fullanswer = input("Do you want to enable all functions? (yes/no): ").lower()
if fullanswer == "yes":
    PasswordCracking = True
    NetworkScanner = True
    WebsiteScanner = True
    print("DONT FORGET TO FILL AUTOMATIONSETTINGS FILE FOR THIS:")
    fullatomation = input("Enable full automation? yes/no (make sure the full automation file is filled)")
    if fullatomation == "yes":
        FullAutomation = True
        runtester = input("do you want to check the input files if everything is correct? yes/no")
        if (runtester == "yes"):
            os.system("python3 FileTester.py")
            pause = input("if everything is correct press enter, otherwise cancel and adjust settings")

else:
    passwordanswer = input("Do you want to check for weak passwords with the password cracker? (yes/no): ").lower()
    if passwordanswer == "yes":
        PasswordCracking = True
        print("Password Cracking active")
    networkanswer = input("Do you want to scan the network for vulnerabilities? (yes/no): ").lower()
    if networkanswer == "yes":
        NetworkScanner = True
        print("Network Scan active")
    websiteanswer = input("Do you want to scan websites for vulnerabilities? (yes/no): ").lower()
    if websiteanswer == "yes":
        WebsiteScanner = True
        print("Website Scan active")

if FullAutomation:
    automated_scan()

if not FullAutomation:
    start_all_scan_normal(PasswordCracking, NetworkScanner, WebsiteScanner)
