import os
import subprocess
import threading
import time


# -------------------------------------Thread definition----------------------------------------------------------------

class myThread(threading.Thread):  # thread definition updated in python 3.0
    def __init__(self, threadID, threadName, name, ip):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.threadName = threadName
        self.name = name
        self.ip = ip

    def run(self):
        print("Starting " + self.threadName)
        crack_password(self.threadName, self.name, self.ip)
        print("Exiting " + self.threadName)


# ----------------------------------------------------------------------------------------------------------------------

# ---------------------------------------------Methodes------------------------------------------------------------------

def crack_password(threadName, name, ip):  # scan def for threads to run
    print(threadName + " works")
    stream = os.popen("ncrack -v --user " + name + " -oX Results/PasswordCracker/" + ip + " -P Resources/passwordCrack/fullcustomhoppenbrouwerslist.txt http://" + ip)
    print(stream.read())

# ----------------------------------------------------------------------------------------------------------------------

approvedstart = False
correct = False
name = ""
f = open("Resources/passwordCrack/Usernames")  # get ip adresses from file
threads = []
threadnumber = 1
f1 = f.readlines()

print("Welcome to the PassCracker!")
ipToCrack = input("What is the ip of the login server that we will be cracking?")
print("Make sure the username list is filled in the Resources folder.")
while not correct:
    cracktype = input(
        "do you want to use the standard cracklist(fast) or individualized passwords? (standard/special)").lower()
    if cracktype == "standard" or cracktype == "special":
        correct = True
start = input("are you ready? (yes/no)")
start = start.lower()

if start == "yes":
    approvedstart = True

if approvedstart:
    for x in f1:
        if cracktype == "standard":
            while threading.activeCount() > 10:  # dont go above 10 threads at the same time
                print("max threads achived, waiting for space")
                time.sleep(10)
            thread = myThread(1, "Thread-" + str(threadnumber), x, ipToCrack)  # creating thread
            thread.start()
            threads.append(thread)  # add to pool
            threadnumber += 1
        elif cracktype == "special":
            os.system("python3 Resources/externalScripts/cupp/cupp.py -i")
            name = input("input name from .txt file please")
            # fix mentalist list hier
            stream = os.popen("hydra -l " + x + "-P Resources/externalScripts/cupp/" + name + ".txt -t 6 " + ipToCrack)
        else:
            print("Error!")
