import os
import threading
import time


class myThread(threading.Thread):
    def __init__(self, threadID, name, adress):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.adress = adress

    def run(self):
        print("Starting " + self.name)
        run_scan(self.adress, self.name)
        print("Exiting " + self.name)


def run_scan(adress, threadName):
    print(threadnumber + " works")
    stream = os.popen('nmap -sV --script=vulscan -T2 -v -Pn -A ' + adress)
    output = stream.read()
    f = open("Results/NetworkScan/" + adress + ".txt", "w+")
    f.write(output)
    f.close()


f = open("Resources/ipAdressesToScan")
threads = []
threadnumber = 1
f1 = f.readlines()

for x in f1:
    while threading.activeCount() < 10:
        print("max threads achived, waiting for space")
        time.sleep(10)
    thread = myThread(1, "Thread-" + str(threadnumber), x)
    thread.start()
    threads.append(thread)
    threadnumber += 1
